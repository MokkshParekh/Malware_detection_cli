#!/usr/bin/env python

import os
import yara
import argparse

# Windows CMD-friendly Banner
BANNER = """
==================================
 Project 164
 by Mokksh Meet Aditya Keerthan
==================================
"""

RULES_DIR = 'rules/'

def scan_file(file_path, compiled_rules):
    """Scan a single file using the compiled YARA rules."""
    try:
        with open(file_path, 'rb') as f:
            matches = compiled_rules.match(data=f.read())
        # Only print if matches are found
        if matches:
            print(f"Match found in {file_path}: {matches}")
    except Exception as e:
        print(f"Error scanning {file_path}: {e}")

def scan_directory(directory_path, compiled_rules):
    """Recursively scan all files in the given directory."""
    for root, _, files in os.walk(directory_path):
        for file in files:
            file_path = os.path.join(root, file)
            scan_file(file_path, compiled_rules)

def main():
    print(BANNER)
    
    parser = argparse.ArgumentParser(description="CLI tool for YARA rule-based scanning")
    parser.add_argument('path', help="File or directory to scan")
    args = parser.parse_args()

    if not os.path.exists(args.path):
        print(f"Error: {args.path} does not exist.")
        return

    # Compile all YARA rules from the rules folder
    rule_files = [os.path.join(RULES_DIR, f) for f in os.listdir(RULES_DIR) if f.endswith('.yar')]
    compiled_rules = yara.compile(filepaths={str(i): rf for i, rf in enumerate(rule_files)})

    # If the provided path is a file, scan it. If it's a directory, scan all files inside it.
    if os.path.isfile(args.path):
        scan_file(args.path, compiled_rules)
    elif os.path.isdir(args.path):
        scan_directory(args.path, compiled_rules)
    else:
        print(f"Error: {args.path} is neither a file nor a directory.")

if __name__ == '__main__':
    main()
